# Version v0.6.0
---
# Source: dist/templates/centos6-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos6-server-large
  annotations:
    openshift.io/display-name: "CentOS 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"


    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos6.0: CentOS 6.0
    name.os.template.kubevirt.io/centos6.1: CentOS 6.1
    name.os.template.kubevirt.io/centos6.2: CentOS 6.2
    name.os.template.kubevirt.io/centos6.3: CentOS 6.3
    name.os.template.kubevirt.io/centos6.4: CentOS 6.4
    name.os.template.kubevirt.io/centos6.5: CentOS 6.5
    name.os.template.kubevirt.io/centos6.6: CentOS 6.6
    name.os.template.kubevirt.io/centos6.7: CentOS 6.7
    name.os.template.kubevirt.io/centos6.8: CentOS 6.8
    name.os.template.kubevirt.io/centos6.9: CentOS 6.9

  labels:
    os.template.kubevirt.io/centos6.0: "true"
    os.template.kubevirt.io/centos6.1: "true"
    os.template.kubevirt.io/centos6.2: "true"
    os.template.kubevirt.io/centos6.3: "true"
    os.template.kubevirt.io/centos6.4: "true"
    os.template.kubevirt.io/centos6.5: "true"
    os.template.kubevirt.io/centos6.6: "true"
    os.template.kubevirt.io/centos6.7: "true"
    os.template.kubevirt.io/centos6.8: "true"
    os.template.kubevirt.io/centos6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos6-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos6-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos6-server-medium
  annotations:
    openshift.io/display-name: "CentOS 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"


    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos6.0: CentOS 6.0
    name.os.template.kubevirt.io/centos6.1: CentOS 6.1
    name.os.template.kubevirt.io/centos6.2: CentOS 6.2
    name.os.template.kubevirt.io/centos6.3: CentOS 6.3
    name.os.template.kubevirt.io/centos6.4: CentOS 6.4
    name.os.template.kubevirt.io/centos6.5: CentOS 6.5
    name.os.template.kubevirt.io/centos6.6: CentOS 6.6
    name.os.template.kubevirt.io/centos6.7: CentOS 6.7
    name.os.template.kubevirt.io/centos6.8: CentOS 6.8
    name.os.template.kubevirt.io/centos6.9: CentOS 6.9

  labels:
    os.template.kubevirt.io/centos6.0: "true"
    os.template.kubevirt.io/centos6.1: "true"
    os.template.kubevirt.io/centos6.2: "true"
    os.template.kubevirt.io/centos6.3: "true"
    os.template.kubevirt.io/centos6.4: "true"
    os.template.kubevirt.io/centos6.5: "true"
    os.template.kubevirt.io/centos6.6: "true"
    os.template.kubevirt.io/centos6.7: "true"
    os.template.kubevirt.io/centos6.8: "true"
    os.template.kubevirt.io/centos6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos6-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos6-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos6-server-small
  annotations:
    openshift.io/display-name: "CentOS 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"


    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos6.0: CentOS 6.0
    name.os.template.kubevirt.io/centos6.1: CentOS 6.1
    name.os.template.kubevirt.io/centos6.2: CentOS 6.2
    name.os.template.kubevirt.io/centos6.3: CentOS 6.3
    name.os.template.kubevirt.io/centos6.4: CentOS 6.4
    name.os.template.kubevirt.io/centos6.5: CentOS 6.5
    name.os.template.kubevirt.io/centos6.6: CentOS 6.6
    name.os.template.kubevirt.io/centos6.7: CentOS 6.7
    name.os.template.kubevirt.io/centos6.8: CentOS 6.8
    name.os.template.kubevirt.io/centos6.9: CentOS 6.9

  labels:
    os.template.kubevirt.io/centos6.0: "true"
    os.template.kubevirt.io/centos6.1: "true"
    os.template.kubevirt.io/centos6.2: "true"
    os.template.kubevirt.io/centos6.3: "true"
    os.template.kubevirt.io/centos6.4: "true"
    os.template.kubevirt.io/centos6.5: "true"
    os.template.kubevirt.io/centos6.6: "true"
    os.template.kubevirt.io/centos6.7: "true"
    os.template.kubevirt.io/centos6.8: "true"
    os.template.kubevirt.io/centos6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos6-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos6-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos6-server-tiny
  annotations:
    openshift.io/display-name: "CentOS 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"


    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos6.0: CentOS 6.0
    name.os.template.kubevirt.io/centos6.1: CentOS 6.1
    name.os.template.kubevirt.io/centos6.2: CentOS 6.2
    name.os.template.kubevirt.io/centos6.3: CentOS 6.3
    name.os.template.kubevirt.io/centos6.4: CentOS 6.4
    name.os.template.kubevirt.io/centos6.5: CentOS 6.5
    name.os.template.kubevirt.io/centos6.6: CentOS 6.6
    name.os.template.kubevirt.io/centos6.7: CentOS 6.7
    name.os.template.kubevirt.io/centos6.8: CentOS 6.8
    name.os.template.kubevirt.io/centos6.9: CentOS 6.9

  labels:
    os.template.kubevirt.io/centos6.0: "true"
    os.template.kubevirt.io/centos6.1: "true"
    os.template.kubevirt.io/centos6.2: "true"
    os.template.kubevirt.io/centos6.3: "true"
    os.template.kubevirt.io/centos6.4: "true"
    os.template.kubevirt.io/centos6.5: "true"
    os.template.kubevirt.io/centos6.6: "true"
    os.template.kubevirt.io/centos6.7: "true"
    os.template.kubevirt.io/centos6.8: "true"
    os.template.kubevirt.io/centos6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos6-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-desktop-large
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-desktop-medium
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-desktop-small
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-desktop-tiny
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-server-large
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-server-medium
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-server-small
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos7-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos7-server-tiny
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos7.0: CentOS 7.0

  labels:
    os.template.kubevirt.io/centos7.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos7-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-desktop-large
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-desktop-medium
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-desktop-small
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-desktop-tiny
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-server-large
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-server-medium
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-server-small
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/centos8-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: centos8-server-tiny
  annotations:
    openshift.io/display-name: "CentOS 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      CentOS 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary CentOS disk image.
    tags: "kubevirt,virtualmachine,linux,centos"

    iconClass: "icon-centos"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/centos8.0: CentOS 8.0

  labels:
    os.template.kubevirt.io/centos8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: centos8-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'centos8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-desktop-large
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-desktop-medium
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-desktop-small
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-desktop-tiny
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-highperformance-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-highperformance-large
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-highperformance-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-highperformance-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-highperformance-medium
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-highperformance-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-highperformance-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-highperformance-small
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-highperformance-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-highperformance-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-highperformance-tiny
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-highperformance-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-server-large
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-server-medium
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-server-small
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/fedora-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fedora-server-tiny
  annotations:
    openshift.io/display-name: "Fedora 23+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Fedora 23 and newer.
      The template assumes that a PVC is available which is providing the
      necessary Fedora disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
    tags: "kubevirt,virtualmachine,fedora,rhel"

    iconClass: "icon-fedora"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/fedora26: Fedora 26
    name.os.template.kubevirt.io/fedora27: Fedora 27
    name.os.template.kubevirt.io/fedora28: Fedora 28

  labels:
    os.template.kubevirt.io/fedora26: "true"
    os.template.kubevirt.io/fedora27: "true"
    os.template.kubevirt.io/fedora28: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: fedora-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: fedora
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'fedora-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/opensuse-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: opensuse-server-large
  annotations:
    openshift.io/display-name: "OpenSUSE Leap 15.0 VM"
    description: >-
      This template can be used to create a VM suitable for
      OpenSUSE Leap 15.0.
      The template assumes that a PVC is available which is providing the
      necessary OpenSUSE disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.0/images/
    tags: "kubevirt,virtualmachine,linux,opensuse"

    iconClass: "icon-opensuse"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/opensuse15.0: openSUSE Leap 15.0

  labels:
    os.template.kubevirt.io/opensuse15.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: opensuse-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: opensuse
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'opensuse-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/opensuse-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: opensuse-server-medium
  annotations:
    openshift.io/display-name: "OpenSUSE Leap 15.0 VM"
    description: >-
      This template can be used to create a VM suitable for
      OpenSUSE Leap 15.0.
      The template assumes that a PVC is available which is providing the
      necessary OpenSUSE disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.0/images/
    tags: "kubevirt,virtualmachine,linux,opensuse"

    iconClass: "icon-opensuse"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/opensuse15.0: openSUSE Leap 15.0

  labels:
    os.template.kubevirt.io/opensuse15.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: opensuse-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: opensuse
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'opensuse-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/opensuse-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: opensuse-server-small
  annotations:
    openshift.io/display-name: "OpenSUSE Leap 15.0 VM"
    description: >-
      This template can be used to create a VM suitable for
      OpenSUSE Leap 15.0.
      The template assumes that a PVC is available which is providing the
      necessary OpenSUSE disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.0/images/
    tags: "kubevirt,virtualmachine,linux,opensuse"

    iconClass: "icon-opensuse"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/opensuse15.0: openSUSE Leap 15.0

  labels:
    os.template.kubevirt.io/opensuse15.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: opensuse-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: opensuse
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'opensuse-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/opensuse-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: opensuse-server-tiny
  annotations:
    openshift.io/display-name: "OpenSUSE Leap 15.0 VM"
    description: >-
      This template can be used to create a VM suitable for
      OpenSUSE Leap 15.0.
      The template assumes that a PVC is available which is providing the
      necessary OpenSUSE disk image.

      Recommended disk image (needs to be converted to raw)
      https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.0/images/
    tags: "kubevirt,virtualmachine,linux,opensuse"

    iconClass: "icon-opensuse"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/opensuse15.0: openSUSE Leap 15.0

  labels:
    os.template.kubevirt.io/opensuse15.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: opensuse-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: opensuse
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'opensuse-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/rhel6-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-desktop-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-desktop-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-desktop-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-desktop-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-server-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-server-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-server-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel6-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel6-server-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 6.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 6 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"


    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0
    name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.1
    name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.2
    name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.3
    name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.4
    name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.5
    name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.6
    name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.7
    name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.8
    name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.9

  labels:
    os.template.kubevirt.io/rhel6.0: "true"
    os.template.kubevirt.io/rhel6.1: "true"
    os.template.kubevirt.io/rhel6.2: "true"
    os.template.kubevirt.io/rhel6.3: "true"
    os.template.kubevirt.io/rhel6.4: "true"
    os.template.kubevirt.io/rhel6.5: "true"
    os.template.kubevirt.io/rhel6.6: "true"
    os.template.kubevirt.io/rhel6.7: "true"
    os.template.kubevirt.io/rhel6.8: "true"
    os.template.kubevirt.io/rhel6.9: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel6-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: sata
              name: rootdisk
            - disk:
                bus: sata
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel6-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-desktop-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-desktop-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-desktop-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-desktop-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-highperformance-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-highperformance-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-highperformance-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-highperformance-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-highperformance-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-highperformance-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-highperformance-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-highperformance-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-highperformance-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-highperformance-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-highperformance-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-highperformance-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-server-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-server-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-server-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel7-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel7-server-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0
    name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.1
    name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.2
    name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.3
    name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.4
    name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.5
    name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.6

  labels:
    os.template.kubevirt.io/rhel7.0: "true"
    os.template.kubevirt.io/rhel7.1: "true"
    os.template.kubevirt.io/rhel7.2: "true"
    os.template.kubevirt.io/rhel7.3: "true"
    os.template.kubevirt.io/rhel7.4: "true"
    os.template.kubevirt.io/rhel7.5: "true"
    os.template.kubevirt.io/rhel7.6: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel7-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel7-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-desktop-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-desktop-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-desktop-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-desktop-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-highperformance-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-highperformance-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-highperformance-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-highperformance-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-highperformance-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-highperformance-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-highperformance-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-highperformance-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-highperformance-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-highperformance-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-highperformance-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/highperformance: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-highperformance-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:
          ioThreadsPolicy: shared

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-server-large
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-server-medium
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-server-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-server-small
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-server-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/rhel8-server-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhel8-server-tiny
  annotations:
    openshift.io/display-name: "Red Hat Enterprise Linux 7.0+ VM"
    description: >-
      This template can be used to create a VM suitable for
      Red Hat Enterprise Linux 7 and newer.
      The template assumes that a PVC is available which is providing the
      necessary RHEL disk image.
    tags: "kubevirt,virtualmachine,linux,rhel"

    iconClass: "icon-rhel"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0

  labels:
    os.template.kubevirt.io/rhel8.0: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: rhel8-server-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'rhel8-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true

---
# Source: dist/templates/ubuntu-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ubuntu-desktop-large
  annotations:
    openshift.io/display-name: "Ubuntu 18.04 (Xenial Xerus) VM"
    description: >-
      This template can be used to create a VM suitable for
      Ubuntu 18.04 (Xenial Xerus).
      The template assumes that a PVC is available which is providing the
      necessary Ubuntu disk image.

      Recommended disk image (needs to be converted to raw)
      http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
    tags: "kubevirt,virtualmachine,ubuntu"

    iconClass: "icon-ubuntu"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/ubuntu18.04: Ubuntu 18.04 LTS

  labels:
    os.template.kubevirt.io/ubuntu18.04: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: ubuntu-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: large
      spec:
        domain:

          cpu:
            sockets: 2
            cores: 1
            threads: 1
            model: Conroe
          resources:
            requests:
              memory: 6G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: ubuntu
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'ubuntu-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/ubuntu-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ubuntu-desktop-medium
  annotations:
    openshift.io/display-name: "Ubuntu 18.04 (Xenial Xerus) VM"
    description: >-
      This template can be used to create a VM suitable for
      Ubuntu 18.04 (Xenial Xerus).
      The template assumes that a PVC is available which is providing the
      necessary Ubuntu disk image.

      Recommended disk image (needs to be converted to raw)
      http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
    tags: "kubevirt,virtualmachine,ubuntu"

    iconClass: "icon-ubuntu"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/ubuntu18.04: Ubuntu 18.04 LTS

  labels:
    os.template.kubevirt.io/ubuntu18.04: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: ubuntu-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: medium
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
            model: Conroe
          resources:
            requests:
              memory: 4G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: ubuntu
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'ubuntu-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/ubuntu-desktop-small.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ubuntu-desktop-small
  annotations:
    openshift.io/display-name: "Ubuntu 18.04 (Xenial Xerus) VM"
    description: >-
      This template can be used to create a VM suitable for
      Ubuntu 18.04 (Xenial Xerus).
      The template assumes that a PVC is available which is providing the
      necessary Ubuntu disk image.

      Recommended disk image (needs to be converted to raw)
      http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
    tags: "kubevirt,virtualmachine,ubuntu"

    iconClass: "icon-ubuntu"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/ubuntu18.04: Ubuntu 18.04 LTS

  labels:
    os.template.kubevirt.io/ubuntu18.04: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/small: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: ubuntu-desktop-small
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: small
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
            model: Conroe
          resources:
            requests:
              memory: 2G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: ubuntu
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'ubuntu-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/ubuntu-desktop-tiny.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ubuntu-desktop-tiny
  annotations:
    openshift.io/display-name: "Ubuntu 18.04 (Xenial Xerus) VM"
    description: >-
      This template can be used to create a VM suitable for
      Ubuntu 18.04 (Xenial Xerus).
      The template assumes that a PVC is available which is providing the
      necessary Ubuntu disk image.

      Recommended disk image (needs to be converted to raw)
      http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
    tags: "kubevirt,virtualmachine,ubuntu"

    iconClass: "icon-ubuntu"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/ubuntu18.04: Ubuntu 18.04 LTS

  labels:
    os.template.kubevirt.io/ubuntu18.04: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/tiny: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: ubuntu-desktop-tiny
      app: ${NAME}
  spec:
    running: false
    template:
      metadata:
        labels:
          kubevirt.io/domain: ${NAME}
          kubevirt.io/size: tiny
      spec:
        domain:

          cpu:
            sockets: 1
            cores: 1
            threads: 1
            model: Conroe
          resources:
            requests:
              memory: 1G
          devices:
            rng: {}
            inputs:
              - type: tablet
                bus: virtio
                name: tablet
            disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            interfaces:
            - bridge: {}
              name: default
        terminationGracePeriodSeconds: 0
        networks:
        - name: default
          pod: {}
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: ubuntu
              chpasswd: { expire: False }
          name: cloudinitdisk

parameters:
- description: VM name
  from: 'ubuntu-[a-z0-9]{16}'
  generate: expression
  name: NAME
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/win2k12r2-desktop-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: win2k12r2-desktop-large
  annotations:
    openshift.io/display-name: "Microsoft Windows Server 2012 R2 VM"
    description: >-
      This template can be used to create a VM suitable for
      Microsoft Windows Server 2012 R2.
      The template assumes that a PVC is available which is providing the
      necessary Windows disk image.
    tags: "kubevirt,virtualmachine,windows"
    iconClass: "icon-windows"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    defaults.template.kubevirt.io/network: default
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
    name.os.template.kubevirt.io/win2k8r2: Microsoft Windows Server 2008 R2
    name.os.template.kubevirt.io/win2k8: Microsoft Windows Server 2008
    name.os.template.kubevirt.io/win10: Microsoft Windows 10

  labels:
    os.template.kubevirt.io/win2k12r2: "true"
    os.template.kubevirt.io/win2k8r2: "true"
    os.template.kubevirt.io/win2k8: "true"
    os.template.kubevirt.io/win10: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: win2k12r2-desktop-large
      app: ${NAME}
  spec:
    running: false
    template:
      spec:
        domain:
          clock:
            utc: {}
            timer:
              hpet:
                present: false
              pit:
                tickPolicy: delay
              rtc:
                tickPolicy: catchup
              hyperv: {}
          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          features:
            acpi: {}
            apic: {}
            hyperv:
              relaxed: {}
              vapic: {}
              spinlocks:
                spinlocks: 8191
          devices:
            disks:
            - disk:
                bus: sata
              name: rootdisk
            interfaces:
            - bridge: {}
              model: e1000e
              name: default
            inputs:
              - type: tablet
                bus: usb
                name: tablet
        terminationGracePeriodSeconds: 0
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        networks:
        - name: default
          pod: {}

parameters:
- name: NAME
  description: VM name
  generate: expression
  from: "win2k12-[a-z0-9]{6}"
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/win2k12r2-desktop-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: win2k12r2-desktop-medium
  annotations:
    openshift.io/display-name: "Microsoft Windows Server 2012 R2 VM"
    description: >-
      This template can be used to create a VM suitable for
      Microsoft Windows Server 2012 R2.
      The template assumes that a PVC is available which is providing the
      necessary Windows disk image.
    tags: "kubevirt,virtualmachine,windows"
    iconClass: "icon-windows"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    defaults.template.kubevirt.io/network: default
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
    name.os.template.kubevirt.io/win2k8r2: Microsoft Windows Server 2008 R2
    name.os.template.kubevirt.io/win2k8: Microsoft Windows Server 2008
    name.os.template.kubevirt.io/win10: Microsoft Windows 10

  labels:
    os.template.kubevirt.io/win2k12r2: "true"
    os.template.kubevirt.io/win2k8r2: "true"
    os.template.kubevirt.io/win2k8: "true"
    os.template.kubevirt.io/win10: "true"
    workload.template.kubevirt.io/desktop: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: win2k12r2-desktop-medium
      app: ${NAME}
  spec:
    running: false
    template:
      spec:
        domain:
          clock:
            utc: {}
            timer:
              hpet:
                present: false
              pit:
                tickPolicy: delay
              rtc:
                tickPolicy: catchup
              hyperv: {}
          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          features:
            acpi: {}
            apic: {}
            hyperv:
              relaxed: {}
              vapic: {}
              spinlocks:
                spinlocks: 8191
          devices:
            disks:
            - disk:
                bus: sata
              name: rootdisk
            interfaces:
            - bridge: {}
              model: e1000e
              name: default
            inputs:
              - type: tablet
                bus: usb
                name: tablet
        terminationGracePeriodSeconds: 0
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        networks:
        - name: default
          pod: {}

parameters:
- name: NAME
  description: VM name
  generate: expression
  from: "win2k12-[a-z0-9]{6}"
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/win2k12r2-server-large.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: win2k12r2-server-large
  annotations:
    openshift.io/display-name: "Microsoft Windows Server 2012 R2 VM"
    description: >-
      This template can be used to create a VM suitable for
      Microsoft Windows Server 2012 R2.
      The template assumes that a PVC is available which is providing the
      necessary Windows disk image.
    tags: "kubevirt,virtualmachine,windows"
    iconClass: "icon-windows"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    defaults.template.kubevirt.io/network: default
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
    name.os.template.kubevirt.io/win2k8r2: Microsoft Windows Server 2008 R2
    name.os.template.kubevirt.io/win2k8: Microsoft Windows Server 2008
    name.os.template.kubevirt.io/win10: Microsoft Windows 10

  labels:
    os.template.kubevirt.io/win2k12r2: "true"
    os.template.kubevirt.io/win2k8r2: "true"
    os.template.kubevirt.io/win2k8: "true"
    os.template.kubevirt.io/win10: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/large: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: win2k12r2-server-large
      app: ${NAME}
  spec:
    running: false
    template:
      spec:
        domain:
          clock:
            utc: {}
            timer:
              hpet:
                present: false
              pit:
                tickPolicy: delay
              rtc:
                tickPolicy: catchup
              hyperv: {}
          cpu:
            sockets: 2
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 6G
          features:
            acpi: {}
            apic: {}
            hyperv:
              relaxed: {}
              vapic: {}
              spinlocks:
                spinlocks: 8191
          devices:
            disks:
            - disk:
                bus: sata
              name: rootdisk
            interfaces:
            - bridge: {}
              model: e1000e
              name: default
        terminationGracePeriodSeconds: 0
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        networks:
        - name: default
          pod: {}

parameters:
- name: NAME
  description: VM name
  generate: expression
  from: "win2k12-[a-z0-9]{6}"
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
---
# Source: dist/templates/win2k12r2-server-medium.yaml
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: win2k12r2-server-medium
  annotations:
    openshift.io/display-name: "Microsoft Windows Server 2012 R2 VM"
    description: >-
      This template can be used to create a VM suitable for
      Microsoft Windows Server 2012 R2.
      The template assumes that a PVC is available which is providing the
      necessary Windows disk image.
    tags: "kubevirt,virtualmachine,windows"
    iconClass: "icon-windows"
    openshift.io/provider-display-name: "KubeVirt"
    openshift.io/documentation-url: "https://github.com/kubevirt/common-templates"
    openshift.io/support-url: "https://github.com/kubevirt/common-templates/issues"
    template.openshift.io/bindable: "false"

    template.kubevirt.io/version: v1alpha1
    defaults.template.kubevirt.io/disk: rootdisk
    defaults.template.kubevirt.io/network: default
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.resources.requests.memory
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks

    name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
    name.os.template.kubevirt.io/win2k8r2: Microsoft Windows Server 2008 R2
    name.os.template.kubevirt.io/win2k8: Microsoft Windows Server 2008
    name.os.template.kubevirt.io/win10: Microsoft Windows 10

  labels:
    os.template.kubevirt.io/win2k12r2: "true"
    os.template.kubevirt.io/win2k8r2: "true"
    os.template.kubevirt.io/win2k8: "true"
    os.template.kubevirt.io/win10: "true"
    workload.template.kubevirt.io/server: "true"
    flavor.template.kubevirt.io/medium: "true"
    template.kubevirt.io/type: "base"

objects:
- apiVersion: kubevirt.io/v1alpha3
  kind: VirtualMachine
  metadata:
    name: ${NAME}
    labels:
      vm.kubevirt.io/template: win2k12r2-server-medium
      app: ${NAME}
  spec:
    running: false
    template:
      spec:
        domain:
          clock:
            utc: {}
            timer:
              hpet:
                present: false
              pit:
                tickPolicy: delay
              rtc:
                tickPolicy: catchup
              hyperv: {}
          cpu:
            sockets: 1
            cores: 1
            threads: 1
          resources:
            requests:
              memory: 4G
          features:
            acpi: {}
            apic: {}
            hyperv:
              relaxed: {}
              vapic: {}
              spinlocks:
                spinlocks: 8191
          devices:
            disks:
            - disk:
                bus: sata
              name: rootdisk
            interfaces:
            - bridge: {}
              model: e1000e
              name: default
        terminationGracePeriodSeconds: 0
        volumes:
        - name: rootdisk
          persistentVolumeClaim:
            claimName: ${PVCNAME}
        networks:
        - name: default
          pod: {}

parameters:
- name: NAME
  description: VM name
  generate: expression
  from: "win2k12-[a-z0-9]{6}"
- name: PVCNAME
  description: Name of the PVC with the disk image
  required: true
